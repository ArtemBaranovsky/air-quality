{"version":3,"sources":["assets/GC_logo.svg","assets/ITN_logo.svg","assets/shid_logo_white.svg","assets/facts-slider/slide-1.jpg","assets/facts-slider/slide-2.jpg","assets/facts-slider/slide-3.jpg","assets/facts-slider/slide-4.jpg","assets/facts-slider/slide-5.jpg","assets/sectors-list/pexels-pixabay-326410.png","assets/sectors-list/pexels-cottonbro-4604564.png","assets/sectors-list/pexels-aleksejs-bergmanis-681335.png","assets/sectors-list/pexels-cottonbro-3992206.png","assets/sectors-list/pexels-flickr-157039.png","assets/sectors-list/pexels-vladislav-vasnetsov-2682683.png","components/HeroBlock/HeroBlock.js","components/Facts/SlideFacts.js","components/Facts/Facts.js","components/SectorsList/SectorItem.js","components/SectorsList/SectorsList.js","components/AirQuality/AirQuality.js","components/Footer/Footer.js","utils/useScreenSize.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","HeroBlock","title","links","LogosImages","logos","map","logoItem","i","src","alt","className","key","navItems","link","href","SlideFacts","item","imgUrl","desc","SwiperCore","use","Navigation","Pagination","Facts","factsSlides","slides","slideInfo","id","navigation","nextEl","prevEl","pagination","el","clickable","renderBullet","index","spaceBetween","slidesPerView","centeredSlides","slidesPerGroup","SectorItem","sector","number","useState","isTooltipShowing","setTooltipShowing","isDirectionSwitched","setDirectionSwitched","toggleTooltip","newValue","onMouseEnter","onMouseLeave","style","background","backgroundSize","name","description","SectorsList","subtitle","itemsList","items","mapboxgl","accessToken","AirQuality","mapContainer","useRef","lng","lat","zoom","locationInfo","useEffect","Map","container","current","center","ref","Footer","partners","author","designer","partnersLogos","logo","navLinks","useScreenSize","window","screen","size","setSize","handleResize","addEventListener","removeEventListener","App","shidLogo","itnLogo","gsLogo","factSlides","require","sectors","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.e6650901.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/GC_logo.e60be19e.svg\";","module.exports = __webpack_public_path__ + \"static/media/ITN_logo.899cd278.svg\";","module.exports = __webpack_public_path__ + \"static/media/shid_logo_white.8dd4ef71.svg\";","module.exports = __webpack_public_path__ + \"static/media/slide-1.5574d6ec.jpg\";","module.exports = __webpack_public_path__ + \"static/media/slide-2.261b9856.jpg\";","module.exports = __webpack_public_path__ + \"static/media/slide-3.54f87ec4.jpg\";","module.exports = __webpack_public_path__ + \"static/media/slide-4.f084f5ed.jpg\";","module.exports = __webpack_public_path__ + \"static/media/slide-5.d3a6a7b0.jpg\";","module.exports = __webpack_public_path__ + \"static/media/pexels-pixabay-326410.5c8f8ca9.png\";","module.exports = __webpack_public_path__ + \"static/media/pexels-cottonbro-4604564.34b8eac4.png\";","module.exports = __webpack_public_path__ + \"static/media/pexels-aleksejs-bergmanis-681335.ee8c3f3a.png\";","module.exports = __webpack_public_path__ + \"static/media/pexels-cottonbro-3992206.c39d429d.png\";","module.exports = __webpack_public_path__ + \"static/media/pexels-flickr-157039.c9026db6.png\";","module.exports = __webpack_public_path__ + \"static/media/pexels-vladislav-vasnetsov-2682683.bbfd8a57.png\";","import React from 'react';\r\nimport './HeroBlock.scss';\r\n\r\nconst HeroBlock = ({/*bgImg, */title, links, logos}) => {\r\n    const LogosImages = logos.map((logoItem, i) => <img src={logoItem} alt=\"partner-logo\" className=\"hero-partners-item\" key={i}/>);\r\n    const navItems = links.map((link, i) => <a href={link.href} className=\"hero-navigation-item\" key={i}>{link.title}</a> );\r\n    // const  bgCSS = {\r\n    //     background: `url(${bgImg})`\r\n    // };\r\n\r\n\r\n    return (\r\n      <section className=\"hero\" /*style={bgCSS}*/>\r\n        <div className=\"container\">\r\n            <div className=\"hero-partners\">\r\n              {/*array of partner's logos*/}\r\n              {LogosImages}\r\n            </div>\r\n\r\n            <nav className=\"hero-navigation\">\r\n              {/*array of links*/}\r\n              {navItems}\r\n            </nav>\r\n            {/*<h1 className=\"hero-title\">Качество атмосферного воздуха</h1>*/}\r\n            <h1 className=\"hero-title\">{title}</h1>\r\n            <a href=\"#\" className=\"hero-link\">Отследить</a>\r\n        </div>\r\n      </section>\r\n    );\r\n};\r\n\r\nexport default HeroBlock;","import React from 'react';\r\n\r\nconst SlideFacts = ({item}) => {\r\n\treturn (\r\n\t\t<div className=\"facts-slide\">\r\n\t\t\t<img src={item.imgUrl} alt=\"slide image\"/>\r\n\t\t\t<p className=\"facts-slide-desc\">\r\n\t\t\t\t{item.desc}\r\n\t\t\t</p>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default SlideFacts;","import React from 'react';\r\nimport SlideFacts from \"./SlideFacts\";\r\nimport  SwiperCore, {Navigation, Pagination} from 'swiper';\r\nimport 'swiper/components/navigation/navigation.scss';\r\nimport 'swiper/components/pagination/pagination.scss';\r\nimport { Swiper, SwiperSlide} from 'swiper/react';\r\nimport 'swiper/swiper.scss';\r\nimport './Facts.scss';\r\n\r\nSwiperCore.use([Navigation, Pagination]);\r\n\r\nconst Facts = ({title, slides}) => {\r\n\tconst factsSlides = slides.map((slideInfo/*, index*/) => <SwiperSlide key={slideInfo.id}>\r\n\t\t<SlideFacts item={slideInfo}/>\r\n\t</SwiperSlide>);\r\n\treturn (\r\n\t\t<section className=\"facts container\">\r\n\t\t\t<h2 className=\"facts-title\">{title}</h2>\r\n\t\t\t<div className=\"swiper-button-prev\"></div>\r\n\t\t\t<Swiper\r\n\t\t\t\tnavigation={{\r\n\t\t\t\t\tnextEl: '.swiper-button-next',\r\n\t\t\t\t\tprevEl: '.swiper-button-prev',\r\n\t\t\t\t}}\r\n\t\t\t\tpagination={{\r\n\t\t\t\t\tel: '.facts-pagination',\r\n\t\t\t\t\tclickable: true,\r\n\t\t\t\t\trenderBullet: function (index, className) {\r\n\t\t\t\t\t\treturn `<span class=\"facts-pagination-bullet ${className}\"></span>`;\r\n\t\t\t\t\t},\r\n\t\t\t\t}}\r\n\t\t\t\tspaceBetween = {40}\r\n\t\t\t\tslidesPerView = {3}\r\n\t\t\t\tcenteredSlides = {true}\r\n\t\t\t\tslidesPerGroup = {3}\r\n\t\t\t\t// loop = {true}\r\n\t\t\t\t// loopFillGroupWithBlank = {true}\r\n\t\t\t\t// slidesPerGroupSkip = {1}\r\n\t\t\t>\r\n\t\t\t\t\t{factsSlides}\r\n\t\t\t\t</Swiper>\r\n\t\t\t<div className=\"swiper-button-next\"></div>\r\n\t\t\t<div className=\"facts-pagination\"/>\r\n\t\t</section>\r\n\t);\r\n};\r\n\r\nexport default Facts;","import React, {useState} from 'react';\r\nimport './SectorsList.scss';\r\n\r\nconst SectorItem = ({sector, number}) => {\r\n\tconst [isTooltipShowing, setTooltipShowing] = useState(false);\r\n\tconst [isDirectionSwitched, setDirectionSwitched] = useState(false)\r\n\tconst toggleTooltip = (newValue) => {\r\n\t\tsetDirectionSwitched(number % 3 === 0)\r\n\t\tsetTooltipShowing(newValue)\r\n\t}\r\n\t// const toggleTooltip = () => {\r\n\t// \tsetTooltipShowing(\r\n\t// \t\t!isTooltipShowing\r\n\t// \t)\r\n\t// }\r\n\r\n\treturn (\r\n\t\t<div className=\"sectors-list-item\"\r\n\t\t\t\t // onClick={toggleTooltip}\r\n\t\t\t\t // onMouseEnter={() => setTooltipShowing(true)}\r\n\t\t\t\t // onMouseLeave={() => setTooltipShowing(false)}\r\n\t\t\t\t onMouseEnter={() => toggleTooltip(true)}\r\n\t\t\t\t onMouseLeave={() => toggleTooltip(false)}\r\n\t\t\t\t style={{\r\n\t\t\t\t\t\t\t\t background: `url(${sector.imgUrl}) center no-repeat`,\r\n\t\t\t\t\t\t\t\t backgroundSize: 'cover'\r\n\t \t}}>\r\n\t\t<p className=\"sectors-list-item-name\">\r\n\t\t\t{sector.name}\r\n\t\t</p>\r\n\t\t{\r\n\t\t\t// isTooltipShowing && <p className=\"sectors-list-item-tooltip\"\r\n\t\t\tisTooltipShowing && <p className={`sectors-list-item-tooltip ${\r\n\t\t\t\tisDirectionSwitched ? 'sectors-list-item-tooltip-switched' : ''\r\n\t\t\t}`}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t // style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t // \tleft: isDirectionSwitched ? '-100%' : null\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t // }}\r\n\t\t\t\t>\r\n\t\t\t\t{sector.description}\r\n\t\t\t</p>\r\n\t\t}\r\n\t</div>\r\n\t);\r\n};\r\n\r\nexport default SectorItem;","import React from 'react';\r\nimport './SectorsList.scss';\r\nimport SectorItem from \"./SectorItem\";\r\n\r\nconst SectorsList = ({title, subtitle, items}) => {\r\n\tconst itemsList = items.map((sector, i) => <SectorItem sector={sector} number={i+1} key={i} />)\r\n\treturn (\r\n\t\t<section className=\"sectors container\">\r\n\t\t\t<h2 className=\"sectors-title\">{title}</h2>\r\n\t\t\t<p className=\"sectors-subtitle\">{subtitle}</p>\r\n\t\t\t<div className=\"sectors-list\">\r\n\t\t\t\t\t{itemsList}\r\n\t\t\t</div>\r\n\t\t</section>\r\n\t);\r\n};\r\n\r\nexport default SectorsList;","import React, {useEffect, useRef, useState} from 'react';\r\nimport mapboxgl from 'mapbox-gl'; // or \"const mapboxgl = require('mapbox-gl');\"\r\nimport 'mapbox-gl/dist/mapbox-gl.css';\r\nimport './AirQuality.scss';\r\n\r\nmapboxgl.accessToken = 'pk.eyJ1IjoiYXJ0YmFyMTk4MCIsImEiOiJja2dka2xmYXMwOGhyMnFzNHRnczcyZ2NlIn0.WEst8CwfSY2nA--hhOUEiw';\r\n\r\nconst AirQuality = () => {\r\n\tconst mapContainer = useRef(null);\r\n\tconst [locationInfo, setLocationInfo] = useState({\r\n\t\tlng: 31,\r\n\t\tlat: 48.5,\r\n\t\tzoom: 5\r\n\t});\r\n\r\n\tuseEffect(() => {\t// обернули внутри функцию componentDidMount()\r\n\t\t// console.log(mapContainer);\r\n\t\tconst map = new mapboxgl.Map({\r\n\t\t\tcontainer: mapContainer.current,\r\n\t\t\tstyle: 'mapbox://styles/mapbox/outdoors-v11',\r\n\t\t\tcenter: [locationInfo.lng, locationInfo.lat],\r\n\t\t\tzoom: locationInfo.zoom\r\n\t\t}, []); // пустой список зависимостей чтобы не происходило постояннного перерендеривания\r\n\t});\r\n\r\n\r\n\treturn (\r\n\t\t<section className={'air-q container'}>\r\n\t\t\t<h2 className=\"air-q-title\">Индекс качества воздуха в режиме реального времени</h2>\r\n\t\t\t<div className=\"air-q-map\" ref={mapContainer} />\r\n\t\t\t<p className=\"air-q-text\">\r\n\t\t\t\tДля того чтобы узнать уровень загрязнения атмосферного воздуха (качество воздуха) в городе Киев, необходимо выбрать соответствующую станцию мониторинга на карте выше.\r\n\t\t\t</p>\r\n\t\t</section>\r\n\t);\r\n};\r\n\r\nexport default AirQuality;","import React from 'react';\r\nimport './Footer.scss';\r\n\r\nconst Footer = ({ partners, links, author, designer}) => {\r\n\t// console.log(partners)\r\n\t// console.log(links)\r\n\tconst partnersLogos = partners.map((logo, i) => <img key={i} src={logo} alt={'partner logo'} className=\"footer-partners-item\" />)\r\n\tconst navLinks = links.map((link, i) => <a href={link.href} key={i} className=\"footer-nav-link\">{link.title}</a>)\r\n\treturn (\r\n\t\t<footer className=\"footer\">\r\n\t\t\t<div className=\"container\">\r\n\t\t\t\t<div className=\"footer-partners\">\r\n\t\t\t\t\t{partnersLogos}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"footer-text-wrap\">\r\n\t\t\t\t\t<div className=\"footer-nav\">\r\n\t\t\t\t\t\t{navLinks}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<p className=\"footer-nav-text\">\r\n\t\t\t\t\t\tСайт был разработан <span className=\"text-yellow\">{author}</span> в учебных целях, в рамках образовательной программы IT nation. Дизайн сайта создан <span className=\"text-yellow\">{designer}</span>.\r\n\t\t\t\t\t</p>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<p className=\"footer-text\">\r\n\t\t\t\t\t2020, Все права защищены\r\n\t\t\t\t</p>\r\n\r\n\t\t\t\t<p className=\"footer-text\">\r\n\t\t\t\t\tСогласие на обработку персональных данных\r\n\t\t\t\t</p>\r\n\r\n\t\t\t\t<p className=\"footer-text\">\r\n\t\t\t\t\tПолитика конфиденциальности\r\n\t\t\t\t</p>\r\n\t\t\t</div>\r\n\t\t</footer>\r\n\t);\r\n};\r\n\r\nexport default Footer;","import React, {useEffect, useState} from 'react';\r\n\r\nconst useScreenSize = () => {\r\n\tconst [size, setSize] = useState({\r\n\t\t// width: window.screen.availWidth,\r\n\t\t// height: window.screen.availHeight,\r\n\t\t...window.screen\t// деструктуризация объекта\r\n\t})\r\n\r\n\tuseEffect(() => {\r\n\t\tconst handleResize = () => setSize(...window.screen) // для храниения информации о том что изменилось при ресайзе\r\n\t\twindow.addEventListener('resize', handleResize) // передаем в колбэк кодд функции\r\n\t\treturn window.removeEventListener('resize', handleResize) // удаляем лишние обработчики\r\n\t},[])\r\n\treturn size;\r\n};\r\n\r\nexport default useScreenSize;","import React from 'react';\r\n\r\nimport './App.scss';\r\nimport HeroBlock from \"./components/HeroBlock/HeroBlock\";\r\nimport Facts from \"./components/Facts/Facts\";\r\nimport SectorsList from \"./components/SectorsList/SectorsList\";\r\nimport AirQuality from \"./components/AirQuality/AirQuality\";\r\nimport Footer from \"./components/Footer/Footer\";\r\nimport gsLogo from './assets/GC_logo.svg';\r\nimport itnLogo from './assets/ITN_logo.svg';\r\nimport shidLogo from './assets/shid_logo_white.svg';\r\nimport useScreenSize from \"./utils/useScreenSize\";\r\n// import heroBg from './assets/hero-bg.jpg';\r\n\r\nfunction App() {\r\n  const sizeObj = useScreenSize();\r\n  const partners = [\r\n    shidLogo,\r\n    itnLogo,\r\n    gsLogo,\r\n    // require('./assets/ITN_logo.svg')\r\n  ];\r\n  const navLinks = [\r\n    { title: \"Основные факты\", href: \"#facts\" },\r\n    { title: \"Индекс качества воздуха\", href: \"#index\" },\r\n    { title: \"Политика по уменьшению загрязнений\", href: \"#policy\" },\r\n  ];\r\n  const factSlides =  [\r\n    {\r\n      id: '1332',\r\n      imgUrl: require(\"./assets/facts-slider/slide-1.jpg\"),\r\n\t\t\tdesc: \"Женщины и дети – главные жертвы загрязнения воздуха\"\r\n    },\r\n    {\r\n      id: '1333',\r\n      imgUrl: require(\"./assets/facts-slider/slide-2.jpg\"),\r\n\t\t\tdesc: \"Защитники окружающей среды подвергаются преследованиям\"\r\n    },\r\n    {\r\n      id: '1334',\r\n      imgUrl: require(\"./assets/facts-slider/slide-3.jpg\"),\r\n\t\t\tdesc: \"Загрязнение воздуха – нарушение прав человека\"\r\n    },\r\n    {\r\n      id: '1335',\r\n      imgUrl: require(\"./assets/facts-slider/slide-4.jpg\"),\r\n\t\t\tdesc: \"4,2 миллиона случаев преждевременной смерти людей из-за загрязнения атмосферного воздуха\"\r\n    },\r\n    {\r\n      id: '1336',\r\n      imgUrl: require(\"./assets/facts-slider/slide-5.jpg\"),\r\n\t\t\tdesc: \"Согласно оценкам, суммарный объем затрат в связи с загрязнением воздуха превышает 5 трлн долл. в год.\"\r\n    }\r\n  ];\r\n\r\n  const sectors = [\r\n    {\r\n      name: \"Промышленность\",\r\n      imgUrl: require(\"./assets/sectors-list/pexels-pixabay-326410.png\"),\r\n      description: \"Чистые технологии, способствующие уменьшению выбросов из промышленных дымовых труб; улучшенная утилизация городских и сельскохозяйственных отходов, включая каптаж (улавливание) метана, выделяемого в местах утилизации отходов, в качестве варианта, альтернативного сжиганию (для использования в качестве биогаза)\"\r\n    },\r\n    {\r\n      name: \"Транспорт\",\r\n      imgUrl: require(\"./assets/sectors-list/pexels-cottonbro-4604564.png\"),\r\n      description: \"Переход к чистым способам выработки энергии; уделение приоритетного внимания скоростному городскому транспорту, пешеходным и велосипедным сетям в городах, а также железнодорожным междугородным грузовым и пассажирским перевозкам; переход к использованию более чистых большегрузных дизельных транспортных средств и автомобилей с низким уровнем выбросов, а также более чистых видов топлива, включая топливо со сниженной концентрацией серы\"\r\n    },\r\n    {\r\n      name: \"Городское планирование\",\r\n      imgUrl: require(\"./assets/sectors-list/pexels-aleksejs-bergmanis-681335.png\"),\r\n      description: \"Улучшение энергетической эффективности зданий и обеспечение более зеленых и компактных и тем самым более энергоэффективных городов\"\r\n    },\r\n    {\r\n      name: \"Энергия\",\r\n      imgUrl: require(\"./assets/sectors-list/pexels-cottonbro-3992206.png\"),\r\n      description: \"Обеспечение доступа к недорогостоящим источникам энергии в быту для приготовления пищи, отопления и освещения\"\r\n    },\r\n    {\r\n      name: \"Энергетика\",\r\n      imgUrl: require(\"./assets/sectors-list/pexels-flickr-157039.png\"),\r\n      description: \" Более широкое использование видов топлива с низким уровнем выбросов и возобновляемых источников энергии, не основанных на сжигании (таких как энергия солнца, ветра или гидроэнергия); комбинированная выработка тепла и энергии; и распределенная выработка энергии (например, энергетические минисистемы и размещаемые на крыше установки для выработки энергии из солнечной энергии)\"\r\n    },\r\n    {\r\n      name: \"Утилизация отходов\",\r\n      imgUrl: require(\"./assets/sectors-list/pexels-vladislav-vasnetsov-2682683.png\"),\r\n      description: \"стратегии уменьшения отходов, сортировки отходов, рециклирования, повторного использования или переработки отходов; а также улучшенные методы биологической утилизации отходов, такие как анаэробная переработка отходов для производства биогаза, являются практически осуществимыми, недорогими альтернативными вариантами открытому сжиганию твердых отходов\"\r\n    },\r\n  ];\r\n  const author = \"Барановским Артемом\";\r\n  const designer = \"Валерией Бубырь\";\r\n  // console.log(sizeObj);\r\n\r\n  return (\r\n    <>\r\n      <HeroBlock title=\"Качество атмосферного воздуха и здоровье\"\r\n                 logos={partners}\r\n                 // bgImg={heroBg}\r\n                 links={navLinks}/>\r\n      <Facts title=\"Основные факты\" slides={factSlides}/>\r\n      <AirQuality />\r\n      <SectorsList title=\"Политика по уменьшению загрязнений\"\r\n                   subtitle=\"Есть много примеров успешной политики по уменьшению загрязнения воздуха в таких секторах, как транспорт, городское планирование, энергетика и промышленность:\"\r\n                   items={sectors}\r\n      />\r\n      <Footer partners={partners} links={navLinks} author={author} designer={designer}/>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}